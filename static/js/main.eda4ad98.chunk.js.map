{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["url","pdfjs","version","GlobalWorkerOptions","workerSrc","Endpoints","baseUrl","App","props","handleOpenClick","item","link","document","createElement","href","name","target","dispatchEvent","MouseEvent","handleDownloadClick","download","handlePrintClick","printJS","handleDeleteClick","fetch","then","result","loadPdfs","text","res","console","log","catch","error","documentLoader","className","type","color","height","width","handlePageChange","event","value","setState","page","handleNameSort","sorted","state","allItems","sort","a","b","localeCompare","reversed","nameSortedReversed","displayedItems","reverse","isNameSorted","isDateSorted","isSizeSorted","handleDateSort","createdOn","toLocaleString","dateSortedReverse","handleSizeSort","size","sizeSortedReverse","handleInputChange","input","filtered","filter","p","includes","itemsLoaded","isModalOpen","itemsPerRow","bind","this","json","items","map","loading","file","pageNumber","Button","variant","onClick","fontSize","Math","random","moment","format","toFixed","TextField","label","onChange","e","documentsRender","slice","length","style","marginRight","Pagination","count","ceil","showFirstButton","showLastButton","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4gBAiBMA,EAAG,4CAAwCC,IAAMC,QAA9C,4BACTD,IAAME,oBAAoBC,UAAYJ,EAkB/B,IAAMK,EAAb,kCAAaA,EACGC,QAAkB,wC,IAiTnBC,E,kDA5Sb,WAAYC,GAAgB,IAAD,8BACzB,cAAMA,IA4CRC,gBAAkB,SAACC,GACjB,IAAIC,EAAOC,SAASC,cAAc,KAClCF,EAAKG,KAAOT,EAAUC,QAAQ,QAAQI,EAAKK,KAC3CJ,EAAKK,OAAS,SACdL,EAAKM,cAAc,IAAIC,WAAW,WAjDT,EAmD3BC,oBAAsB,SAACT,GACrB,IAAIC,EAAOC,SAASC,cAAc,KAClCF,EAAKG,KAAOT,EAAUC,QAAQ,YAAYI,EAAKK,KAC/CJ,EAAKS,SAAW,WAChBT,EAAKM,cAAc,IAAIC,WAAW,WAvDT,EAyD3BG,iBAAmB,SAACX,GAClBY,IAAQjB,EAAUC,QAAQ,QAAQI,EAAKK,OA1Dd,EA4D3BQ,kBAAoB,SAACb,GACnBc,MAAMnB,EAAUC,QAAQ,UAAUI,EAAKK,MACtCU,MAAK,SAAAC,GAEJ,OADA,EAAKC,WACED,EAAOE,UAEfH,MAAK,SAAAI,GAAG,OAAIC,QAAQC,IAAIF,MACxBG,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,OAnEH,EAqH3BC,eACE,qBAAKC,UAAU,gBAAf,SACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CAAQC,KAAK,QAAQC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,SAxHnC,EA6H3BC,iBAAmB,SAACC,EAAmCC,GACrD,EAAKC,SAAS,CACZC,KAAMF,KA/HiB,EAkI3BG,eAAiB,WACf,IAAMC,EAAM,YACP,EAAKC,MAAMC,SAASC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEnC,KAAKqC,cAAcD,EAAEpC,UAEzDsC,GAAY,EAAKN,MAAMO,mBAC7B,EAAKX,SAAS,CACZY,eAAgBF,EAAWP,EAAOU,UAAYV,EAC9CW,cAAc,EACdH,mBAAoBD,EACpBK,cAAc,EACdC,cAAc,KA5IS,EA+I3BC,eAAiB,WACf,IAAMd,EAAM,YACP,EAAKC,MAAMC,SAASC,MAAK,SAACC,EAAGC,GAAJ,OAC1BD,EAAEW,UAAUC,iBAAiBV,cAAcD,EAAEU,UAAUC,sBAGrDT,GAAY,EAAKN,MAAMgB,kBAC7B,EAAKpB,SAAS,CACZY,eAAgBF,EAAWP,EAAOU,UAAYV,EAC9CW,cAAc,EACdC,cAAc,EACdK,kBAAmBV,EACnBM,cAAc,KA3JS,EA8J3BK,eAAiB,WACf,IAAMlB,EAAM,YAAO,EAAKC,MAAMC,SAASC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEe,KAAOd,EAAEc,SAC3DZ,GAAY,EAAKN,MAAMmB,kBAC7B,EAAKvB,SAAS,CACZY,eAAgBF,EAAWP,EAAOU,UAAYV,EAC9CW,cAAc,EACdC,cAAc,EACdC,cAAc,EACdO,kBAAmBb,KAtKI,EAyK3Bc,kBAAoB,SAACC,GACnB,GAAc,KAAVA,EACF,EAAKzB,SAAS,CACZY,eAAgB,EAAKR,MAAMC,SAC3BS,cAAc,EACdC,cAAc,EACdC,cAAc,QAEX,CACL,IAAMU,EAAQ,YACT,EAAKtB,MAAMC,SAASsB,QAAO,SAACC,GAAD,OAAOA,EAAExD,KAAKyD,SAASJ,OAEvD,EAAKzB,SAAS,CACZY,eAAgBc,EAChBZ,cAAc,EACdC,cAAc,EACdC,cAAc,IAGlB7B,QAAQC,IAAIqC,IA1LZ,EAAKrB,MAAQ,CACX0B,aAAa,EACbC,aAAa,EACb1B,SAAU,GACVO,eAAgB,GAChBX,KAAM,EACN+B,YAAa,EACblB,cAAc,EACdH,oBAAoB,EACpBI,cAAc,EACdK,mBAAmB,EACnBJ,cAAc,EACdO,mBAAmB,GAErB,EAAK1B,iBAAmB,EAAKA,iBAAiBoC,KAAtB,gBACxB,EAAK/B,eAAiB,EAAKA,eAAe+B,KAApB,gBACtB,EAAKhB,eAAiB,EAAKA,eAAegB,KAApB,gBACtB,EAAKZ,eAAiB,EAAKA,eAAeY,KAApB,gBACtB,EAAKjD,SAAW,EAAKA,SAASiD,KAAd,gBApBS,E,qDAuB3B,WACEC,KAAKlD,a,sBAGP,WAAY,IAAD,OACTH,MAAMnB,EAAUC,SACbmB,MAAK,SAACI,GAAD,OAASA,EAAIiD,UAClBrD,MAAK,SAACC,GACL,EAAKiB,SAAS,CACZ8B,aAAa,EACbzB,SAAUtB,EACV6B,eAAgB7B,OAGnBM,OAAM,SAACC,GACN,EAAKU,SAAS,CACZ8B,aAAa,IAEf3C,QAAQC,IAAIE,Q,6BA6BlB,SAAgB8C,GAAgC,IAAD,OAC7C,OACE,qBAAK5C,UAAU,gBAAf,SACG4C,EAAMC,KAAI,SAACtE,GACV,OACE,gCACE,eAAC,IAAD,CACEyB,UAAU,oBACV8C,QAAS,EAAK/C,eAEdgD,KAAM7E,EAAUC,QAAU,QAAUI,EAAKK,KAJ3C,UAME,cAAC,IAAD,CAAMoE,WAAY,IAClB,sBAAKhD,UAAU,gBAAf,UACE,sBAAKA,UAAU,iBAAf,UACA,cAACiD,EAAA,EAAD,CAAQjD,UAAU,sBAAsBkD,QAAQ,WAAWC,QAAS,kBAAM,EAAK7E,gBAAgBC,IAA/F,SACE,cAAC,IAAD,CAAmB6E,SAAS,YAE9B,cAACH,EAAA,EAAD,CAAQjD,UAAU,sBAAsBkD,QAAQ,WAAWC,QAAS,kBAAM,EAAKnE,oBAAoBT,IAAnG,SACE,cAAC,IAAD,CAAY6E,SAAS,eAGvB,sBAAKpD,UAAU,iBAAf,UACA,cAACiD,EAAA,EAAD,CAAQjD,UAAU,sBAAsBkD,QAAQ,WAAWC,QAAS,kBAAM,EAAKjE,iBAAiBX,IAAhG,SACE,cAAC,IAAD,CAAW6E,SAAS,YAEtB,cAACH,EAAA,EAAD,CAAQjD,UAAU,sBAAsBkD,QAAQ,WAAWC,QAAS,kBAAM,EAAK/D,kBAAkBb,IAAjG,SACE,cAAC,IAAD,CAAmB6E,SAAS,QAAQlD,MAAM,oBAlBzCmD,KAAKC,UAuBZ,sBAAKtD,UAAU,uBAAf,UACE,qBAAKA,UAAU,eAAf,SAA+BzB,EAAKK,OACpC,qBAAKoB,UAAU,eAAf,SACGuD,IAAOhF,EAAKmD,WAAW8B,OAAO,2BAEjC,sBAAKxD,UAAU,eAAf,WACIzB,EAAKuD,KAAO,MAAM2B,QAAQ,GAD9B,cAhCMJ,KAAKC,iB,oBAoHzB,WAAU,IAAD,OACP,OACE,qBAAKtD,UAAU,UAAf,SACG0C,KAAK9B,MAAM0B,YACV,gCACE,sBAAKtC,UAAU,eAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,YAAf,sBACA,eAACiD,EAAA,EAAD,CACEjD,UACE0C,KAAK9B,MAAMU,aAAe,oBAAsB,aAElD4B,QAAQ,WACRC,QAAST,KAAKhC,eALhB,iBAOO,IACJgC,KAAK9B,MAAMO,mBACV,cAAC,IAAD,IAEA,cAAC,IAAD,OAGJ,eAAC8B,EAAA,EAAD,CACEjD,UACE0C,KAAK9B,MAAMW,aAAe,oBAAsB,aAElD2B,QAAQ,WACRC,QAAST,KAAKjB,eALhB,iBAOO,IACJiB,KAAK9B,MAAMgB,kBACV,cAAC,IAAD,IAEA,cAAC,IAAD,OAGJ,eAACqB,EAAA,EAAD,CACEjD,UACE0C,KAAK9B,MAAMY,aAAe,oBAAsB,aAElD0B,QAAQ,WACRC,QAAST,KAAKb,eALhB,iBAOO,IACJa,KAAK9B,MAAMmB,kBACV,cAAC,IAAD,IAEA,cAAC,IAAD,UAIJ,cAACkB,EAAA,EAAD,CAAQjD,UAAU,gBAAgBkD,QAAQ,WAAWC,QAAST,KAAKlD,SAAnE,SACE,cAAC,IAAD,MAEJ,qBAAKQ,UAAU,kBAAf,SACE,cAAC0D,EAAA,EAAD,CACEC,MAAM,iBACNT,QAAQ,WACRU,SAAU,SAACC,GAAD,OAAO,EAAK7B,kBAAkB6B,EAAEhF,OAAO0B,eAIvD,sBAAKP,UAAU,gBAAf,UACG0C,KAAKoB,gBACJpB,KAAK9B,MAAMQ,eAAe2C,OACvBrB,KAAK9B,MAAMH,KAAO,IAA+B,EAAzBiC,KAAK9B,MAAM4B,cACnCE,KAAK9B,MAAMH,KAAO,IAA+B,EAAzBiC,KAAK9B,MAAM4B,aAClCE,KAAK9B,MAAM4B,eAGfE,KAAK9B,MAAMH,KAAO,IAA+B,EAAzBiC,KAAK9B,MAAM4B,aACnCE,KAAK9B,MAAM4B,YACbE,KAAK9B,MAAMQ,eAAe4C,OACtBtB,KAAKoB,gBACHpB,KAAK9B,MAAMQ,eAAe2C,OACvBrB,KAAK9B,MAAMH,KAAO,IAA+B,EAAzBiC,KAAK9B,MAAM4B,aAClCE,KAAK9B,MAAM4B,aACZE,KAAK9B,MAAMH,KAAO,IAA+B,EAAzBiC,KAAK9B,MAAM4B,aAClC,EAAIE,KAAK9B,MAAM4B,cAGrB,QAEN,sBAAKxC,UAAU,sBAAf,UACE,qBAAKiE,MAAO,CAAEC,YAAa,UAC3B,cAACC,EAAA,EAAD,CACEjE,MAAM,UACN+D,MAAO,CAAEC,YAAa,QACtBzD,KAAMiC,KAAK9B,MAAMH,KACjBmD,SAAUlB,KAAKrC,iBACf+D,MAAOf,KAAKgB,KACV3B,KAAK9B,MAAMQ,eAAe4C,QACE,EAAzBtB,KAAK9B,MAAM4B,cAEhB8B,iBAAe,EACfC,gBAAc,UAKpB,qBAAKvE,UAAU,cAAf,SACE,cAAC,IAAD,CAAQC,KAAK,QAAQC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,a,GAtSlDoE,IAAMC,WC1BTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBtF,MAAK,YAAkD,IAA/CuF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3G,SAAS4G,eAAe,SAM1BX,K","file":"static/js/main.eda4ad98.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Document, Page, pdfjs } from 'react-pdf/dist/esm/entry.webpack';\r\nimport moment from \"moment\";\r\nimport { pdfData } from \"./Models/pdfData\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Loader from \"react-loader-spinner\";\r\nimport printJS from 'print-js';\r\n\r\nconst url = `//cdn.jsdelivr.net/npm/pdfjs-dist@${pdfjs.version}/build/pdf.worker.min.js`\r\npdfjs.GlobalWorkerOptions.workerSrc = url;\r\n\r\ninterface IProps {}\r\ninterface IState {\r\n  isModalOpen: boolean;\r\n  itemsLoaded: boolean;\r\n  allItems: pdfData[];\r\n  displayedItems: pdfData[];\r\n  page: number;\r\n  itemsPerRow: number;\r\n  isNameSorted: boolean;\r\n  nameSortedReversed: boolean;\r\n  isDateSorted: boolean;\r\n  dateSortedReverse: boolean;\r\n  isSizeSorted: boolean;\r\n  sizeSortedReverse: boolean;\r\n}\r\n\r\nexport class Endpoints {\r\n  public static baseUrl: string = \"https://damlfvkdmp.cfolks.pl/myscans/\";\r\n}\r\n\r\nclass App extends React.Component<IProps, IState> {\r\n  ///items per row to change based on resolution\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      itemsLoaded: false,\r\n      isModalOpen: false,\r\n      allItems: [],\r\n      displayedItems: [],\r\n      page: 1,\r\n      itemsPerRow: 5,\r\n      isNameSorted: false,\r\n      nameSortedReversed: false,\r\n      isDateSorted: false,\r\n      dateSortedReverse: false,\r\n      isSizeSorted: false,\r\n      sizeSortedReverse: false,\r\n    };\r\n    this.handlePageChange = this.handlePageChange.bind(this);\r\n    this.handleNameSort = this.handleNameSort.bind(this);\r\n    this.handleDateSort = this.handleDateSort.bind(this);\r\n    this.handleSizeSort = this.handleSizeSort.bind(this);\r\n    this.loadPdfs = this.loadPdfs.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadPdfs();\r\n  }\r\n\r\n  loadPdfs() {\r\n    fetch(Endpoints.baseUrl)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          itemsLoaded: true,\r\n          allItems: result,\r\n          displayedItems: result,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          itemsLoaded: true,\r\n        });\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleOpenClick = (item: pdfData) => {\r\n    var link = document.createElement('a');\r\n    link.href = Endpoints.baseUrl+'view/'+item.name;\r\n    link.target = '_blank';\r\n    link.dispatchEvent(new MouseEvent('click'));\r\n  }\r\n  handleDownloadClick = (item: pdfData) => {\r\n    var link = document.createElement('a');\r\n    link.href = Endpoints.baseUrl+'download/'+item.name;\r\n    link.download = 'file.pdf';\r\n    link.dispatchEvent(new MouseEvent('click'));\r\n  }\r\n  handlePrintClick = (item: pdfData) => {\r\n    printJS(Endpoints.baseUrl+'view/'+item.name);\r\n  }\r\n  handleDeleteClick = (item: pdfData) => {\r\n    fetch(Endpoints.baseUrl+'delete/'+item.name)\r\n    .then(result => {\r\n      this.loadPdfs();\r\n      return result.text();\r\n    })\r\n    .then(res => console.log(res))\r\n    .catch(error => console.log(error));\r\n  }\r\n\r\n  documentsRender(items: pdfData[]): JSX.Element {\r\n    return (\r\n      <div className=\"pdfsContainer\">\r\n        {items.map((item) => {\r\n          return (\r\n            <div key={Math.random()}>\r\n              <Document\r\n                className=\"documentContainer\"\r\n                loading={this.documentLoader}\r\n                key={Math.random()}\r\n                file={Endpoints.baseUrl + 'view/' + item.name}\r\n              >\r\n                <Page pageNumber={1} />\r\n                <div className=\"documentFront\">\r\n                  <div className=\"docFrontBtnRow\">\r\n                  <Button className=\"documentFrontButton\" variant=\"outlined\" onClick={() => this.handleOpenClick(item)}>\r\n                    <OpenInBrowserIcon fontSize=\"large\"></OpenInBrowserIcon>\r\n                  </Button>\r\n                  <Button className=\"documentFrontButton\" variant=\"outlined\" onClick={() => this.handleDownloadClick(item)}>\r\n                    <GetAppIcon fontSize=\"large\"></GetAppIcon>\r\n                  </Button>\r\n                  </div>\r\n                  <div className=\"docFrontBtnRow\">\r\n                  <Button className=\"documentFrontButton\" variant=\"outlined\" onClick={() => this.handlePrintClick(item)}>\r\n                    <PrintIcon fontSize=\"large\"></PrintIcon>\r\n                  </Button>\r\n                  <Button className=\"documentFrontButton\" variant=\"outlined\" onClick={() => this.handleDeleteClick(item)}>\r\n                    <DeleteForeverIcon fontSize=\"large\" color=\"error\"></DeleteForeverIcon>\r\n                  </Button>\r\n                  </div>\r\n                </div>\r\n              </Document>\r\n              <div className=\"descriptionContainer\">\r\n                <div className=\"documentName\">{item.name}</div>\r\n                <div className=\"documentDate\">\r\n                  {moment(item.createdOn).format(\"MMMM Do YYYY, h:mm:ss\")}\r\n                </div>\r\n                <div className=\"documentSize\">\r\n                  {(item.size / 1024).toFixed(2)} KB\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n  documentLoader = (\r\n    <div className=\"emptyDocument\">\r\n      <div className=\"loadingPage\">\r\n        <Loader type=\"Rings\" color=\"#00BFFF\" height={80} width={80} />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    this.setState({\r\n      page: value,\r\n    });\r\n  };\r\n  handleNameSort = () => {\r\n    const sorted = [\r\n      ...this.state.allItems.sort((a, b) => a.name.localeCompare(b.name)),\r\n    ];\r\n    const reversed = !this.state.nameSortedReversed;\r\n    this.setState({\r\n      displayedItems: reversed ? sorted.reverse() : sorted,\r\n      isNameSorted: true,\r\n      nameSortedReversed: reversed,\r\n      isDateSorted: false,\r\n      isSizeSorted: false,\r\n    });\r\n  };\r\n  handleDateSort = () => {\r\n    const sorted = [\r\n      ...this.state.allItems.sort((a, b) =>\r\n        a.createdOn.toLocaleString().localeCompare(b.createdOn.toLocaleString())\r\n      ),\r\n    ];\r\n    const reversed = !this.state.dateSortedReverse;\r\n    this.setState({\r\n      displayedItems: reversed ? sorted.reverse() : sorted,\r\n      isNameSorted: false,\r\n      isDateSorted: true,\r\n      dateSortedReverse: reversed,\r\n      isSizeSorted: false,\r\n    });\r\n  };\r\n  handleSizeSort = () => {\r\n    const sorted = [...this.state.allItems.sort((a, b) => a.size - b.size)];\r\n    const reversed = !this.state.sizeSortedReverse;\r\n    this.setState({\r\n      displayedItems: reversed ? sorted.reverse() : sorted,\r\n      isNameSorted: false,\r\n      isDateSorted: false,\r\n      isSizeSorted: true,\r\n      sizeSortedReverse: reversed,\r\n    });\r\n  };\r\n  handleInputChange = (input: string) => {\r\n    if (input === \"\") {\r\n      this.setState({\r\n        displayedItems: this.state.allItems,\r\n        isNameSorted: false,\r\n        isDateSorted: false,\r\n        isSizeSorted: false,\r\n      });\r\n    } else {\r\n      const filtered = [\r\n        ...this.state.allItems.filter((p) => p.name.includes(input)),\r\n      ];\r\n      this.setState({\r\n        displayedItems: filtered,\r\n        isNameSorted: false,\r\n        isDateSorted: false,\r\n        isSizeSorted: false,\r\n      });\r\n    }\r\n    console.log(input);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"appBody\">\r\n        {this.state.itemsLoaded ? (\r\n          <div>\r\n            <div className=\"functionsBar\">\r\n              <div className=\"sortButtons\">\r\n                <div className=\"sortTitle\">Sort by:</div>\r\n                <Button\r\n                  className={\r\n                    this.state.isNameSorted ? \"sortButton active\" : \"sortButton\"\r\n                  }\r\n                  variant=\"outlined\"\r\n                  onClick={this.handleNameSort}\r\n                >\r\n                  NAME{\" \"}\r\n                  {this.state.nameSortedReversed ? (\r\n                    <ArrowDropDownIcon></ArrowDropDownIcon>\r\n                  ) : (\r\n                    <ArrowDropUpIcon></ArrowDropUpIcon>\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  className={\r\n                    this.state.isDateSorted ? \"sortButton active\" : \"sortButton\"\r\n                  }\r\n                  variant=\"outlined\"\r\n                  onClick={this.handleDateSort}\r\n                >\r\n                  DATE{\" \"}\r\n                  {this.state.dateSortedReverse ? (\r\n                    <ArrowDropDownIcon></ArrowDropDownIcon>\r\n                  ) : (\r\n                    <ArrowDropUpIcon></ArrowDropUpIcon>\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  className={\r\n                    this.state.isSizeSorted ? \"sortButton active\" : \"sortButton\"\r\n                  }\r\n                  variant=\"outlined\"\r\n                  onClick={this.handleSizeSort}\r\n                >\r\n                  SIZE{\" \"}\r\n                  {this.state.sizeSortedReverse ? (\r\n                    <ArrowDropDownIcon></ArrowDropDownIcon>\r\n                  ) : (\r\n                    <ArrowDropUpIcon></ArrowDropUpIcon>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n                <Button className=\"refreshButton\" variant=\"outlined\" onClick={this.loadPdfs}>\r\n                  <RefreshIcon></RefreshIcon>\r\n                </Button>\r\n              <div className=\"searchContainer\">\r\n                <TextField\r\n                  label=\"Filter by Name\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => this.handleInputChange(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"rendersParent\">\r\n              {this.documentsRender(\r\n                this.state.displayedItems.slice(\r\n                  (this.state.page - 1) * (this.state.itemsPerRow * 2),\r\n                  (this.state.page - 1) * (this.state.itemsPerRow * 2) +\r\n                    this.state.itemsPerRow\r\n                )\r\n              )}\r\n              {(this.state.page - 1) * (this.state.itemsPerRow * 2) +\r\n                this.state.itemsPerRow <\r\n              this.state.displayedItems.length\r\n                ? this.documentsRender(\r\n                    this.state.displayedItems.slice(\r\n                      (this.state.page - 1) * (this.state.itemsPerRow * 2) +\r\n                        this.state.itemsPerRow,\r\n                      (this.state.page - 1) * (this.state.itemsPerRow * 2) +\r\n                        2 * this.state.itemsPerRow\r\n                    )\r\n                  )\r\n                : null}\r\n            </div>\r\n            <div className=\"paginationContainer\">\r\n              <div style={{ marginRight: \"auto\" }}></div>\r\n              <Pagination\r\n                color=\"primary\"\r\n                style={{ marginRight: \"10px\" }}\r\n                page={this.state.page}\r\n                onChange={this.handlePageChange}\r\n                count={Math.ceil(\r\n                  this.state.displayedItems.length /\r\n                    (this.state.itemsPerRow * 2)\r\n                )}\r\n                showFirstButton\r\n                showLastButton\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"loadingPage\">\r\n            <Loader type=\"Rings\" color=\"#00BFFF\" height={80} width={80} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}